---
# Source: whoami/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-whoami-svc
  labels:
    app: whoami
spec:
  type: ClusterIP
  ports:
    - name: web
      port: 80
      targetPort: 8080
  selector:
    app: whoami
---
# Source: whoami/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-whoami
  namespace: default
  labels:
    helm.sh/chart: whoami-1.0.0
    app.kubernetes.io/name: whoami
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: whoami
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: whoami
        app.kubernetes.io/instance: release-name
        release: kube-prom-stack
    spec:
      containers:
        - name: whoami
          image: "containous/whoami:latest"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
        - name: metrics-sidecar
          image: "nginx/nginx-prometheus-exporter:1.3.0"
          imagePullPolicy: Always
          args:
            - "-nginx.scrape-uri=http://127.0.0.1:80/"
            - "-web.listen-address=:9112"
          ports:
            - name: metrics
              containerPort: 9112
              protocol: TCP
---
# Source: whoami/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-whoami-hpa
  namespace: default
  labels:
    app: whoami
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-whoami-deploy
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 5
      selectPolicy: Max
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 4
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      selectPolicy: Min
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 4
          periodSeconds: 15
---
# Source: whoami/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-whoami-ingress
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - whoami.local
      secretName: whoami-tls
  rules:
    - host: whoami.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-whoami-svc
                port:
                  number: 80
